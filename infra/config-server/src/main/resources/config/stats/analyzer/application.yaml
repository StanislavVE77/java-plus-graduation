analyzer:
  kafka:
    bootstrap-servers: "localhost:9092"
    consumer1:
      properties:
        "bootstrap.servers": ${analyzer.kafka.bootstrap-servers}
        "enable.auto.commit": false
        "group.id": "stats.analyzer.useractions"
        "key.deserializer": "org.apache.kafka.common.serialization.StringDeserializer"
        "value.deserializer": "ru.practicum.stats.analyzer.configuration.UserActionDeserializer"
      topic: "stats.user-actions.v1"
      poll-timeout: 100ms

    consumer2:
      properties:
        "bootstrap.servers": ${analyzer.kafka.bootstrap-servers}
        "enable.auto.commit": false
        "group.id": "stats.analyzer.similarity"
        "key.deserializer": "org.apache.kafka.common.serialization.StringDeserializer"
        "value.deserializer": "ru.practicum.stats.analyzer.configuration.EventSimilarityDeserializer"
      topic: "stats.events-similarity.v1"
      poll-timeout: 100ms

server:
  port: 0

grpc:
  server:
    port: 0

spring:
  datasource:
    initialization-mode: always
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/stats
    username: stats
    password: stats
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: always
